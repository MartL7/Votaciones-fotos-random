---
import HorizontalScroll from "@/components/HorizontalScroll.astro"
import type { Character } from "@/types/Character"
import { fallenCharacters } from '@/logic/fallenCharacters'

interface Props {
  characters: Character[]
}

const { characters } = Astro.props

// --> Arreglar error de typescript
const charactersForMobile = characters.concat(fallenCharacters)
---

<div class="md:hidden">
  <picture class="flex relative sm:h-[600px] h-[550px] flex-col justify-center items-center mb-10">
    <img 
      src="/img/Ulises/Ulises-image-presentation.webp"
      transition:name="Character-Yahir"
      decoding="async"
      alt="Imagen de Emmanuel" 
      class="size-full object-contain transition"
      id="image-presentation-2"
      style="mask-image: linear-gradient(black 50%, transparent);"
    />
    <span id="name-text" class='font-Merri font-bold skew-y-[-21deg] pointer-events-none text-center absolute bottom-0 left-0 right-0 z-50 mx-auto text-5xl lg:text-3xl text-blue-300/90'>
      
    </span>
  </picture>

  <section class="swiper mb-5">
    <div class="swiper-wrapper">
      {
        // -> Forma pirata xd -> Corregir el -mt-10
        charactersForMobile.map(({ folder, id, name, imageSmall }) => {

          const isFallen = folder === 'Fallen'
          const classFallen = isFallen ? 'fallen-character' : ''
          const classFallenImage = isFallen ? 'saturate-0' : ''

          return (
            <div class="swiper-slide">
              <a 
                href={!isFallen ? `/character/${id}` : '#'} 
                class={`character-link relative flex justify-center items-center h-20 ${classFallen}`}
                data-id={id}
                data-folder={isFallen ? folder : null}
                >
                <img 
                  src={imageSmall} 
                  alt={`Imagen del personaje ${name}`}
                  decoding="async"
                  loading="lazy"
                  class={`size-40 object-cover z-[1000] -mt-10 ${classFallenImage}`}
                  style="mask-image: linear-gradient(black 50%, transparent);"
                  id={`character-${id}`}
                />
                <div class="absolute inset-0 character-link-background"></div>
              </a>
            </div>
          )
        })
      }
    </div>
  </section>

  <aside class="flex justify-center items-center">
    <HorizontalScroll class:list={["w-16 text-primary opacity-80"]} />
  </aside>

</div>

<style>
  .swiper {
    width: 90vw;
    height: 192px;
    text-align: center;
  }

  .swiper-slide{
    text-align: end;
    font-size: 18px;
    display: flex;
    justify-content: end;
    align-items: end;
  }

  .character-link-background {
    opacity: .25;
    background: linear-gradient(#fff 0%, #ffffff80 30%, #0000 95%);
  }

  .fallen-character {
    text-decoration:line-through ;
    color: #ff5050e6;
  }
</style>